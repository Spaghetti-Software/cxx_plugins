# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push,pull_request]



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_test:
    # The type of runner that the job will run on
    runs-on: 
      - self-hosted 
      - ${{matrix.config.os}}
      
    name: Linux ${{matrix.config.cc}} ${{matrix.config}}

    strategy:
      matrix:
        config: 
          - build_type: "Release"
            generator: "Unix Makefiles"
            cc: "gcc"
            cxx: "g++"
            os: linux
          - build_type: "Debug"
            generator: "Unix Makefiles"
            cc: "gcc"
            cxx: "g++"
            os: linux
          - build_type: "Release"
            generator: "Unix Makefiles"
            cc: "clang"
            cxx: "clang++"
            os: linux
          - build_type: "Debug"
            generator: "Unix Makefiles"
            cc: "clang"
            cxx: "clang++"
            os: linux
    
    env:
      build_dir: build/${{matrix.config.os}}/${{matrix.config.cc}}-${{matrix.config.build_type}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Checkout submodules
      run:  |
            git submodule sync
            git submodule update --init --recursive
    
    # Create build directory
    - name: Create build directory
      if:   matrix.config.os == 'linux'
      run:  |
            mkdir -p ${{env.build_dir}}
    
    # Clear build directory
    - name: Clear old build
      if:   matrix.config.os == 'linux'
      run:  |
            rm -rf ${{env.build_dir}}/*
            
    # Configure
    - name: Configure cmake
      run:  |
            cd ${{env.build_dir}}
            cmake ../../.. -G "${{matrix.config.generator}}" -DCMAKE_C_COMPILER=${{matrix.config.cc}} -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}} -DCXX_PLUGINS_BUILD_TESTS=ON 
